package sample.listeners;

import com.leapmotion.leap.*;
import javafx.application.Platform;
import sample.Main;

/**
 * An event listener for events generated by leap motion.
 * Created by batman on 17/10/16.
 */

public class LeapEventListener extends Listener {
    private Main mApplication;
    private Hand mPitchHand, mVolumeHand;
    private InteractionBox mInteractionBox;

    public LeapEventListener(Main application) {
        this.mApplication = application;
    }

    @Override
    public void onConnect(Controller controller) {
        super.onConnect(controller);
        mApplication.notifyConnect();
    }

    @Override
    public void onFrame(Controller controller) {
        Frame frame = controller.frame();

        if (mInteractionBox == null) {
            mInteractionBox = frame.interactionBox();
        }

        HandList hands = frame.hands();
        if (hands.isEmpty()) {
            mPitchHand = null;
            mVolumeHand = null;
            mApplication.notifyNoHandsAvailable();
        } else {
            setHands(hands);
            determineVolumeChangeAndNotify();
            determinePitchChangeAndNotify();
            mApplication.notifyHandsAvailable();
        }
    }

    @Override
    public void onDisconnect(Controller controller) {
        super.onDisconnect(controller);
        mApplication.notifyDisconnect();
    }

    private void determinePitchChangeAndNotify() {
        if (mPitchHand != null) {
            float pitchHandNormalizedXPosition = mInteractionBox.normalizePoint(mPitchHand.palmPosition(), true).getX();
            Platform.runLater(() -> mApplication.updatePitchBy(pitchHandNormalizedXPosition));
        }
    }

    private void determineVolumeChangeAndNotify() {
        if (mVolumeHand != null) {
            float volumeHandNormalizedPosition = mInteractionBox.normalizePoint(mVolumeHand.palmPosition(), true).getY();
            Platform.runLater(() -> mApplication.updateVolume(volumeHandNormalizedPosition));
        }
    }

    private void setHands(HandList handList) {
        switch (handList.count()) {
            case 1:
                if (handList.get(0).isLeft()) {
                    mVolumeHand = handList.get(0);
                    mPitchHand = null;
                } else {
                    mPitchHand = handList.get(0);
                    mVolumeHand = null;
                }
                break;
            case 2:
                if (handList.get(0).isLeft()) {
                    mVolumeHand = handList.get(0);
                    mPitchHand = handList.get(1);
                } else {
                    mVolumeHand = handList.get(1);
                    mPitchHand = handList.get(0);
                }
                break;
            default:
                System.out.println("Multiple people/Alien/Mutant detected!");
        }
    }
}